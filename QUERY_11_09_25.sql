CREATE DATABASE LOPO
GO
USE LOPO
GO
CREATE TABLE USUARIOS
(
	ID_USUARIOS INT IDENTITY(1,1) PRIMARY KEY,
	NOMBRE VARCHAR(100) NOT NULL,
	MAIL VARCHAR(100) NOT NULL,
	CONTRASENIA VARCHAR(100) NOT NULL
)
GO
CREATE TABLE LIBROS
(
	AUTOR VARCHAR(100) NOT NULL ,
	TITULO VARCHAR(100) NOT NULL PRIMARY KEY,
	EJEMPLAR INT NOT NULL
)
GO
CREATE TABLE PRESTAMOS
(
	ID_PRESTAMO INT IDENTITY(1,1) PRIMARY KEY,
	ID_USUARIOS INT NOT NULL,
	TITULO VARCHAR(100) NOT NULL,
	FECHA_RETIRO DATETIME NOT NULL,
	FECHA_DEVUELTA DATETIME NOT NULL,

	CONSTRAINT ID_USUARIOS FOREIGN KEY(ID_USUARIOS)
		REFERENCES USUARIOS(ID_USUARIOS),
	CONSTRAINT FK_TITULO FOREIGN KEY (TITULO)
		REFERENCES LIBROS(TITULO)
)
GO
CREATE PROCEDURE OBTENER_USUARIOS
	AS
	BEGIN
	SELECT * FROM USUARIOS
	END
GO
CREATE PROCEDURE ALTA_USUARIOS
	@NOMBRE VARCHAR(100),
	@MAIL VARCHAR(100),
	@CONTRASENIA VARCHAR(100)
	AS
	BEGIN
		INSERT INTO USUARIOS ( NOMBRE, MAIL, CONTRASENIA) VALUES ( @NOMBRE, @MAIL, @CONTRASENIA)
	END
GO
CREATE PROCEDURE BAJA_USUARIOS
	@ID_USUARIOS INT
	AS
	SET NOCOUNT ON 
	BEGIN
	IF NOT EXISTS( SELECT 1 FROM USUARIOS WHERE ID_USUARIOS = @ID_USUARIOS )
		BEGIN
			THROW 50001,' EXTE USUARIO NO EXISTE',1;
		END
	END
	BEGIN
		DELETE FROM USUARIOS WHERE ID_USUARIOS = @ID_USUARIOS
	END
GO		
CREATE PROCEDURE MODIFICAR_USUARIOS
	@ID_USUARIOS INT,
	@NOMBRE VARCHAR(100),
	@MAIL VARCHAR(100),
	@CONTRASENIA VARCHAR(100)
	AS
	SET NOCOUNT ON
	BEGIN
	IF NOT EXISTS( SELECT 1 FROM USUARIOS WHERE ID_USUARIOS = @ID_USUARIOS)
		BEGIN
			THROW 50001,'NO EXISTE ESTE USUARIO',1;
		END
	IF LEN(@CONTRASENIA) < 5 
		BEGIN
			THROW 50002,'CONTRASENIA MUY CORTA',1;
		END
	IF (@MAIL IS NULL OR @NOMBRE IS NULL )
		BEGIN
			THROW 50003,' DATOS INVALIDOS',1;
		END
	UPDATE USUARIOS
	SET NOMBRE = @NOMBRE,
		MAIL = @MAIL,
		CONTRASENIA = @CONTRASENIA
	WHERE ID_USUARIOS = @ID_USUARIOS
	END
GO
CREATE PROCEDURE OBTENER_LIBROS
AS
BEGIN
	SELECT * FROM LIBROS
END
GO
CREATE PROCEDURE ALTA_LIBROS
	@AUTOR VARCHAR(100),
	@TITULO VARCHAR(100),
	@EJEMPLAR INT 
	AS
	SET NOCOUNT ON
	BEGIN
		INSERT INTO LIBROS (AUTOR,TITULO,EJEMPLAR) VALUES (@AUTOR,@TITULO,@EJEMPLAR)
END
GO
CREATE PROCEDURE BAJA_LIBRO
	@TITULO VARCHAR(100)
AS
SET NOCOUNT ON
BEGIN
	IF NOT EXISTS( SELECT 1 FROM LIBROS WHERE TITULO = @TITULO )
	BEGIN 
		THROW 50001, 'ERROR, no HAY LIBROS con este titulo',1
	END


		DELETE FROM LIBROS WHERE TITULO = @TITULO
END
GO
CREATE PROCEDURE MODIFICAR_LIBRO
	@BORRAR VARCHAR(100),
	@AUTOR VARCHAR(100),
	@TITULO VARCHAR(100),
	@EJEMPLAR INT
	AS
	SET NOCOUNT ON
	BEGIN
		IF NOT EXISTS( SELECT 1 FROM LIBROS WHERE TITULO = @BORRAR)
			BEGIN
				THROW 50001, ' ERROR, No hay libros con este titulo',1;
			END
		BEGIN
			UPDATE LIBROS 
			SET
				AUTOR = @AUTOR,
				TITULO = @TITULO,
				EJEMPLAR = @EJEMPLAR
			WHERE TITULO = @BORRAR;
		END
	END
GO
CREATE PROCEDURE OBTENER_TITULO
	@TITULO VARCHAR(100)
	AS
	SET NOCOUNT ON
	BEGIN
		SELECT * FROM LIBROS WHERE TITULO = @TITULO
	END
GO
EXEC OBTENER_TITULO 'TUTUCA EL SOL'
GO
CREATE PROCEDURE OBTENER_USUARIO_CON_MAIL
	@MAIL VARCHAR(100)
	AS
	SET NOCOUNT ON
	BEGIN
	IF NOT EXISTS( SELECT 1 FROM USUARIOS WHERE MAIL = @MAIL )
		BEGIN
			THROW 50001, 'NO EXISTE ESTE USUARIO',1;
		END
	SELECT * FROM USUARIOS WHERE MAIL = @MAIL;
END
GO
CREATE PROCEDURE OBTENER_PRESTAMOS
AS
BEGIN
	SET NOCOUNT ON
	SELECT 
		P.ID_PRESTAMO,
		P.ID_USUARIOS,
		P.TITULO,
		P.FECHA_RETIRO,
		P.FECHA_DEVUELTA
	FROM PRESTAMOS P
END
GO
CREATE PROCEDURE DEVOLVER_PRESTAMO
	@NUMERO_PRESTAMO INT
	AS 
	SET NOCOUNT ON
	BEGIN
	IF NOT EXISTS( SELECT 1 FROM PRESTAMOS WHERE ID_PRESTAMO = @NUMERO_PRESTAMO)
		BEGIN
			THROW 50001, ' NO EXISTE EL NUMERO DEL PRESTAMO',1;
		END
	DELETE FROM PRESTAMOS WHERE ID_PRESTAMO = @NUMERO_PRESTAMO
	END
GO
CREATE PROCEDURE CREAR_PRESTAMO
	@ID_USUARIO INT,
	@TITULO VARCHAR(100),
	@FECHA_RETIRO DATE,
	@FECHA_DEVUELTA DATE
	AS
	SET NOCOUNT ON
	BEGIN
		INSERT INTO PRESTAMOS(ID_USUARIOS,TITULO,FECHA_RETIRO,FECHA_DEVUELTA)
			VALUES(@ID_USUARIO,@TITULO,@FECHA_RETIRO,@FECHA_DEVUELTA)
	END
